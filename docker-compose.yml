services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: flask-backend
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ./static:/static
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    restart: always
    volumes:
      - ./static/avatars:/usr/share/nginx/html/avatars
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started

volumes:
  pgdata:



